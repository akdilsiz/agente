CREATE TYPE ra_node_type AS ENUM ('worker', 'master');

CREATE TABLE IF NOT EXISTS ra_nodes (
    id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(200) not null,
    code varchar(200) not null,
    detail text null,
    type ra_node_type default 'worker',
    inserted_at TIMESTAMP WITHOUT TIME ZONE DEFAULT (CURRENT_TIMESTAMP at time zone 'utc'),
    updated_at TIMESTAMP WITHOUT TIME ZONE DEFAULT (CURRENT_TIMESTAMP at time zone 'utc')
);

CREATE UNIQUE INDEX IF NOT EXISTS ra_nodes_code_unique_index ON ra_nodes USING btree(code);

CREATE TABLE IF NOT EXISTS ra_users (
    id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    node_id bigint not null,
    username varchar(64) not null,
    password_digest varchar(200) not null,
    email    varchar(64),
    is_active boolean default true,
    inserted_at TIMESTAMP WITHOUT TIME ZONE DEFAULT (CURRENT_TIMESTAMP at time zone 'utc'),
    updated_at TIMESTAMP WITHOUT TIME ZONE DEFAULT (CURRENT_TIMESTAMP at time zone 'utc'),

    CONSTRAINT fk_ra_users_node_id foreign key (node_id) references ra_nodes(id) on update cascade on delete cascade
);

CREATE UNIQUE INDEX IF NOT EXISTS ra_users_username_unique_index ON ra_users USING btree (username);
CREATE UNIQUE INDEX IF NOT EXISTS ra_users_email_unique_index ON ra_users USING btree (email);


CREATE TYPE ra_job_type AS ENUM ('new_release', 'start', 'restart', 'shutdown', 'other');

CREATE TABLE IF NOT EXISTS ra_jobs (
    id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    node_id bigint not null,
    source_user_id bigint null,
    inserted_at TIMESTAMP WITHOUT TIME ZONE DEFAULT (CURRENT_TIMESTAMP at time zone 'utc'),

    CONSTRAINT fk_ra_jobs_node_id foreign key (node_id) references ra_nodes(id) on update cascade on delete cascade,
    CONSTRAINT fk_ra_jobs_source_user_id foreign key (source_user_id) references ra_users(id) on update cascade on delete set null
);

CREATE INDEX IF NOT EXISTS ra_jobs_source_user_id_index ON ra_jobs USING btree(source_user_id);

CREATE TABLE IF NOT EXISTS ra_job_details (
    id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    node_id bigint not null,
    job_id bigint not null,
    source_user_id bigint null,

    code varchar(64) not null,
    name varchar(200) not null,
    type ra_job_type default 'new_release',
    detail text null,
    before boolean default false,
    before_jobs text null,
    after boolean default false,
    after_jobs text null,
    script_file varchar(200) null,
    script text null,

    inserted_at TIMESTAMP WITHOUT TIME ZONE DEFAULT (CURRENT_TIMESTAMP at time zone 'utc'),

    CONSTRAINT fk_ra_job_details_node_id foreign key (node_id) references ra_nodes(id) on update cascade on delete cascade,
    CONSTRAINT fk_ra_job_details_job_id foreign key (job_id) references ra_jobs(id) on update cascade on delete cascade,
    CONSTRAINT fk_ra_job_details_source_user_id foreign key (source_user_id) references ra_users(id) on update cascade on delete set null
);

CREATE INDEX IF NOT EXISTS ra_job_details_code_unique_index ON ra_job_details USING btree(code);
CREATE INDEX IF NOT EXISTS ra_job_details_job_id_index ON ra_job_details USING btree(job_id);
CREATE INDEX IF NOT EXISTS ra_job_details_source_user_id_index ON ra_job_details USING btree(source_user_id);

CREATE TABLE IF NOT EXISTS ra_job_logs (
    id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    node_id bigint not null,

    job_id bigint not null,
    data jsonb null,
    state boolean default false,
    inserted_at TIMESTAMP WITHOUT TIME ZONE DEFAULT (CURRENT_TIMESTAMP at time zone 'utc'),

    CONSTRAINT fk_ra_job_logs_node_id foreign key (node_id) references ra_nodes(id) on update cascade on delete cascade,
    CONSTRAINT fk_ra_job_logs_job_id foreign key (job_id) references ra_jobs(id) on update cascade on delete cascade
);

CREATE INDEX IF NOT EXISTS ra_job_logs_job_id_index ON ra_job_logs USING btree(job_id);
CREATE INDEX IF NOT EXISTS ra_job_logs_inserted_at_index ON ra_job_logs USING btree(inserted_at DESC);
